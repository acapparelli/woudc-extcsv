Python Package Bootstrap
========================

This is a template when starting DMSec Python projects.

Spirit/Principles
-----------------

- http://en.wikipedia.org/wiki/DevOps
- setUp/tearDown: http://www.subbu.org/blog/2013/04/code-the-infra
- reproducible workflow: http://bost.ocks.org/mike/make
- versioning: http://semver.org
- virtualenv: http://virtualenv.org
- dependencies are fetched, not managed in version control
 - pip: http://pip-installer.org
- platform independence, use os
- Python
 - develop modules for reuse, scripts are the last step
 - logging, not print statements
  - no print statements except for scripts in bin/
   - everything is callable
 - tests, tests, tests
 - PEP8: http://www.python.org/dev/peps/pep-0008/
  - specifically:
   - 4 spaces, NOT tabs
   - UNIX line endings, NOT DOS
   - 4 spaces, NOT tabs
   - did we mention 4 spaces, NOT tabs?
   - always absolute imports
   - always run code through pep8 and pylint before committing:
    $ pip install pep8 pylint
    $ pep8 foo.py
    $ pylint foo.py


Overview of Structure
---------------------

bin/: scripts (if none, you don't need this directory)

etc/: configuration files, ancillary data files (if none, you don't need this directory)

foopackage/: the actual package (to be renamed)
 __init__.py: always set __version__ to x.y.z 
 more code goes here


LICENSE.txt: set year (YYYY)

MANIFEST.in: if there are non-python files that should be included
             in the distribution (see http://docs.python.org/2/distutils/sourcedist.html#the-manifest-in-template)

README.txt: provide a description and items as per the headings

requirements.txt: dependencies, see http://www.pip-installer.org/en/latest/cookbook.html#requirements-files

setup.py: setup script, set UPPERCASE variables
          scripts should be set as list

tests/:
 data/: test data files (if none, you don't need this directory)
 run_tests.py: unittest style testing, see http://docs.python.org/2/library/unittest.html

Common workflows
----------------

# work in a virtualenv
$ virtualenv myvenv
$ cd myvenv
$ . bin/activate
$ svn export http://subversion.cmc.ec.gc.ca/repos/dmsec/python-project-bootstrap
$ cd python-project-bootstrap
# run tests
$ cd tests && python run_tests.py
# create a distribution
$ python setup.py sdist  # result is in dist/foopackage-x.y.z.tar.gz




